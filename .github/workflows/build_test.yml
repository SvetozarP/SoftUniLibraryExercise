# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Test Library

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install modules
      run: npm install
    - name: Amend the settings host
      run: echo "export const settings = { host:\"http://localhost:3030\" }" > src/config.js
    - name: Run the backend server
      run: node server/server.js &
    - name: Start the App
      run: npm start &
    - name: Install Playwright
      run: npx playwright install
    - name: Run associated tests
      run: npm test

  deploy-BE:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Deploy BackEnd
      uses: JorgeLNJunior/render-deploy@v1.4.4
      with:
        service_id: ${{ secrets.BACKEND_KEY }}
        api_key: ${{ secrets.RENDER_KEY }}
        wait_deploy: true

  deploy-FE:
    needs: deploy-BE
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Deploy FrontEnd
      uses: JorgeLNJunior/render-deploy@v1.4.4
      with:
        service_id: ${{ secrets.FRONTEND_KEY }}
        api_key: ${{ secrets.RENDER_KEY }}
        wait_deploy: true